# Fase Base
FROM node:20-alpine AS base
RUN apk add --no-cache g++ make py3-pip libc6-compat
WORKDIR /app
# Instalar pnpm globalmente
RUN npm install -g typescript @nestjs/cli
COPY package.json package-lock.json tsconfig.json ./

# Fase de Construcción
FROM base AS builder
WORKDIR /app
COPY . ./
RUN npm ci

# Declaración de los ARGs (se pasarán desde GitHub Actions)
ARG NODE_ENV=production
ARG USERS_MICROSERVICE_HOST=0.0.0.0
ARG USERS_SERVICE_PORT=3001
ARG SMTP_USER
ARG SMTP_PASS
ARG SMTP_HOST
ARG SMTP_PORT
ARG SMTP_SECURE
ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET
ARG GOOGLE_CALLBACK_URL
ARG DATABASE_URL
ARG DATABASE_URL_UNPOOLED
ARG PGHOST
ARG PGHOST_UNPOOLED
ARG PGUSER
ARG PGDATABASE
ARG PGPASSWORD
ARG POSTGRES_URL
ARG POSTGRES_URL_NON_POOLING
ARG POSTGRES_USER
ARG POSTGRES_HOST
ARG POSTGRES_PASSWORD
ARG POSTGRES_DATABASE
ARG POSTGRES_URL_NO_SSL
ARG POSTGRES_PRISMA_URL

# Variables de entorno
ENV NODE_ENV=$NODE_ENV
ENV USERS_MICROSERVICE_HOST=$USERS_MICROSERVICE_HOST
ENV USERS_SERVICE_PORT=$USERS_SERVICE_PORT
ENV SMTP_USER=$SMTP_USER
ENV SMTP_PASS=$SMTP_PASS
ENV SMTP_HOST=$SMTP_HOST
ENV SMTP_PORT=$SMTP_PORT
ENV SMTP_SECURE=$SMTP_SECURE
ENV GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
ENV GOOGLE_CALLBACK_URL=$GOOGLE_CALLBACK_URL
ENV DATABASE_URL=$DATABASE_URL
ENV DATABASE_URL_UNPOOLED=$DATABASE_URL_UNPOOLED
ENV PGHOST=$PGHOST
ENV PGHOST_UNPOOLED=$PGHOST_UNPOOLED
ENV PGDATABASE=$PGDATABASE
ENV PGPASSWORD=$PGPASSWORD
ENV POSTGRES_URL=$POSTGRES_URL
ENV POSTGRES_URL_NON_POOLING=$POSTGRES_URL_NON_POOLING
ENV POSTGRES_USER=$POSTGRES_USER
ENV POSTGRES_HOST=$POSTGRES_HOST
ENV POSTGRES_PASSWORD=$POSTGRES_PASSWORD
ENV POSTGRES_DATABASE=$POSTGRES_DATABASE
ENV POSTGRES_URL_NO_SSL=$POSTGRES_URL_NO_SSL
ENV POSTGRES_PRISMA_URL=$POSTGRES_PRISMA_URL

# Construir el proyecto con pnpm
RUN npm run build

# Fase de Producción
FROM base AS production
WORKDIR /app

# Declaración de los ARGs (se pasarán desde GitHub Actions)
ARG NODE_ENV=production
ARG USERS_MICROSERVICE_HOST=0.0.0.0
ARG USERS_SERVICE_PORT=3001
ARG SMTP_USER
ARG SMTP_PASS
ARG SMTP_HOST
ARG SMTP_PORT
ARG SMTP_SECURE
ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET
ARG GOOGLE_CALLBACK_URL
ARG DATABASE_URL
ARG DATABASE_URL_UNPOOLED
ARG PGHOST
ARG PGHOST_UNPOOLED
ARG PGUSER
ARG PGDATABASE
ARG PGPASSWORD
ARG POSTGRES_URL
ARG POSTGRES_URL_NON_POOLING
ARG POSTGRES_USER
ARG POSTGRES_HOST
ARG POSTGRES_PASSWORD
ARG POSTGRES_DATABASE
ARG POSTGRES_URL_NO_SSL
ARG POSTGRES_PRISMA_URL

# Variables de entorno
ENV NODE_ENV=$NODE_ENV
ENV USERS_MICROSERVICE_HOST=$USERS_MICROSERVICE_HOST
ENV USERS_SERVICE_PORT=$USERS_SERVICE_PORT
ENV SMTP_USER=$SMTP_USER
ENV SMTP_PASS=$SMTP_PASS
ENV SMTP_HOST=$SMTP_HOST
ENV SMTP_PORT=$SMTP_PORT
ENV SMTP_SECURE=$SMTP_SECURE
ENV GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
ENV GOOGLE_CALLBACK_URL=$GOOGLE_CALLBACK_URL
ENV DATABASE_URL=$DATABASE_URL
ENV DATABASE_URL_UNPOOLED=$DATABASE_URL_UNPOOLED
ENV PGHOST=$PGHOST
ENV PGHOST_UNPOOLED=$PGHOST_UNPOOLED
ENV PGDATABASE=$PGDATABASE
ENV PGPASSWORD=$PGPASSWORD
ENV POSTGRES_URL=$POSTGRES_URL
ENV POSTGRES_URL_NON_POOLING=$POSTGRES_URL_NON_POOLING
ENV POSTGRES_USER=$POSTGRES_USER
ENV POSTGRES_HOST=$POSTGRES_HOST
ENV POSTGRES_PASSWORD=$POSTGRES_PASSWORD
ENV POSTGRES_DATABASE=$POSTGRES_DATABASE
ENV POSTGRES_URL_NO_SSL=$POSTGRES_URL_NO_SSL
ENV POSTGRES_PRISMA_URL=$POSTGRES_PRISMA_URL

# Configurar usuario seguro para correr la aplicación
RUN addgroup -g 1001 -S nodejs && adduser -S nestjs -u 1001
USER nestjs

# Copiar archivos relevantes de la fase de construcción
COPY --from=builder /app/package.json /app/package-lock.json /app/tsconfig.json ./
COPY --from=builder /app/dist ./dist

EXPOSE $PORT

CMD ["npm", "run", "start:prod"]
